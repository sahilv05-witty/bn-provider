# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

type GlossaryDto {
  id: Float!
  createdBy: String!
  createdAt: DateTime!
  updatedBy: String
  updatedAt: DateTime
  code: String!
  name: String!
  description: String
  isActive: Boolean
  type: String!
}

"""
A date-time string at UTC, such as 2019-12-03T09:54:33Z, compliant with the date-time format.
"""
scalar DateTime

type RoleDto {
  id: Float!
  createdBy: String!
  createdAt: DateTime!
  updatedBy: String
  updatedAt: DateTime
  code: String!
  name: String!
  description: String
  isActive: Boolean!
  users: [UserDto!]!
}

type UserDto {
  id: Float!
  createdBy: String!
  createdAt: DateTime!
  updatedBy: String
  updatedAt: DateTime
  firstName: String!
  lastName: String
  email: String!
  isActive: Boolean!
  termsAcceptedAt: DateTime
  lastLoggedInAt: DateTime
  role: RoleDto!
  provider: ProviderDto
  isProvider: Boolean!
}

type ProviderDto {
  id: Float!
  createdBy: String!
  createdAt: DateTime!
  updatedBy: String
  updatedAt: DateTime
  name: String!
  group: String!
  isActive: Boolean!
  user: UserDto
}

type PatientDto {
  id: Float!
  createdBy: String!
  createdAt: DateTime!
  updatedBy: String
  updatedAt: DateTime
  firstName: String!
  lastName: String
  dateOfBirth: DateTime!
  brighttreeNumber: Float!
  betterNightId: Float!
  entryPoint: String!
  currentPathway: String!
  status: String!
  statusDate: DateTime!
  provider: String!
}

type Query {
  glossary(id: Float!): GlossaryDto
  glossaries: [GlossaryDto!]!
  user(id: Float!): UserDto
  users(searchUser: SearchUserDto): [UserDto!]!
  role(id: Float!): RoleDto
  roles(isActive: Boolean): [RoleDto!]
  provider: ProviderDto!
  providers(searchProvider: SearchProviderDto): [ProviderDto!]
  patients(providerId: Float): [PatientDto!]!
  patient(id: Float!): PatientDto
  entryPoint: GlossaryDto!
  currentPathway: GlossaryDto!
  status: GlossaryDto!
}

input SearchUserDto {
  isActive: Boolean
  roleId: Float
}

input SearchProviderDto {
  isActive: Boolean
}

type Mutation {
  createGlossary(glossary: CreateGlossaryDto!): GlossaryDto!
  updateGlossary(reference: UpdateGlossaryDto!): GlossaryDto!
  createUser(user: CreateUserDto!): UserDto!
  activeUser(user: ActiveUserDto!): UserDto!
  createRole(role: CreateRoleDto!): RoleDto!
  createProvider(provider: CreateProviderDto!): ProviderDto!
  createPatient(patient: CreatePatientDto!): PatientDto!
  updatePatientStatus(patient: UpdatePatientDto!): PatientDto!
}

input CreateGlossaryDto {
  code: String!
  name: String!
  description: String
  type: GlossaryType!
}

"""The supported colors."""
enum GlossaryType {
  """Glossary types belongs to the PATIENT STATUS"""
  PATIENTSTATUS

  """Glossary types belongs to the ENTRY POINT"""
  ENTRYPOINT

  """Glossary types belongs to the PATHWAY."""
  PATHWAY
}

input UpdateGlossaryDto {
  id: Float!
  code: String!
  name: String!
  description: String
  isActive: Boolean
}

input CreateUserDto {
  firstName: String!
  lastName: String
  email: String!
  roleId: Float!
  providerId: Float
}

input ActiveUserDto {
  id: Float!
  password: String!
}

input CreateRoleDto {
  code: String!
  name: String!
  description: String
}

input CreateProviderDto {
  name: String!
  group: String!
  brighttreeId: Float!
}

input CreatePatientDto {
  firstName: String!
  lastName: String
  dateOfBirth: DateTime!
  brighttreeNumber: Float!
  betterNightId: Float!
  entryPointId: Float!
  currentPathwayId: Float!
  statusId: Float!
  statusDate: DateTime!
  providerId: Float!
}

input UpdatePatientDto {
  id: Float!
  statusId: Float!
  statusDate: DateTime!
}