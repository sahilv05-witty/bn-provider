# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

type ProviderDto {
  id: Float!
  createdBy: String!
  createdAt: DateTime!
  updatedBy: String
  updatedAt: DateTime
  name: String!
  group: String!
  isActive: Boolean!
  user: UserDto
}

"""
A date-time string at UTC, such as 2019-12-03T09:54:33Z, compliant with the date-time format.
"""
scalar DateTime

type RoleDto {
  id: Float!
  createdBy: String!
  createdAt: DateTime!
  updatedBy: String
  updatedAt: DateTime
  code: String!
  name: String!
  description: String
  isActive: Boolean!
  users: [UserDto!]!
}

type UserDto {
  id: Float!
  createdBy: String!
  createdAt: DateTime!
  updatedBy: String
  updatedAt: DateTime
  firstName: String!
  lastName: String
  email: String!
  isActive: Boolean!
  termsAcceptedAt: DateTime
  lastLoggedInAt: DateTime
  role: RoleDto!
  provider: ProviderDto
  isProvider: Boolean!
}

type UserStateGlossaryDto {
  id: Float!
  createdBy: String!
  createdAt: DateTime!
  updatedBy: String
  updatedAt: DateTime
  code: String!
  name: String!
  description: String
  isActive: Boolean
}

type Query {
  userStateGlossary(id: Float!): UserStateGlossaryDto
  userStateGlossaries: [UserStateGlossaryDto!]!
  user(id: Float!): UserDto
  users(searchUser: SearchUserDto): [UserDto!]!
  role(id: Float!): RoleDto
  roles(isActive: Boolean): [RoleDto!]
  provider(id: Float!): ProviderDto
  providers: [ProviderDto!]
}

input SearchUserDto {
  isActive: Boolean
  roleId: Float
}

type Mutation {
  createUserStateGlossary(createUserStateGlossary: CreateUserStateGlossaryDto!): UserStateGlossaryDto!
  updateUserStateGlossary(reference: UpdateUserStateGlossaryDto!): UserStateGlossaryDto!
  createUser(user: CreateUserDto!): UserDto!
  activeUser(user: ActiveUserDto!): UserDto!
  createRole(role: CreateRoleDto!): RoleDto!
  createProvider(provider: CreateProviderDto!): ProviderDto!
}

input CreateUserStateGlossaryDto {
  code: String!
  name: String!
  description: String
  type: UserStateGlossaryType!
}

"""The supported colors."""
enum UserStateGlossaryType {
  """UserStateGlossary types belongs to the PATIENT STATUS"""
  PATIENTSTATUS
  ENTRYPOINT @deprecated(reason: "UserStateGlossary types belongs to the ENTRY POINT")
  PATHWAY @deprecated(reason: "UserStateGlossary types belongs to the PATHWAY.")
}

input UpdateUserStateGlossaryDto {
  id: Float!
  code: String!
  name: String!
  description: String
  isActive: Boolean
}

input CreateUserDto {
  firstName: String!
  lastName: String
  email: String!
  roleId: Float!
  providerId: Float
}

input ActiveUserDto {
  id: Float!
  password: String!
}

input CreateRoleDto {
  code: String!
  name: String!
  description: String
}

input CreateProviderDto {
  name: String!
  group: String!
  brighttreeId: Float!
}